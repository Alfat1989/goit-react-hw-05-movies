{"version":3,"file":"static/js/310.dea5fd42.chunk.js","mappings":"+RAEMA,EAAW,+BACXC,EAAM,mCAECC,EAAqB,WAEhC,OAAOC,IAAAA,IAAA,UACGH,GADH,OADa,wBAEgB,CAChCI,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GAET,EAEYC,EAAiB,SAACC,GAE7B,OAAOR,IAAAA,IAAA,UACGH,GADH,OADW,iBAEgB,CAC9BI,OAAQ,CACNC,QAASJ,EACTW,MAAOD,EACPE,KAAM,KAGTP,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GACT,EAEYK,EAAkB,SAACC,GAE9B,OAAOZ,IAAAA,IAAA,UACGH,GADH,OADW,WACX,OAC0Be,GAAW,CACxCX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,IAAb,GACT,EAEYQ,EAAqB,SAACD,GAGjC,OAAOZ,IAAAA,IAAA,UACGH,GADH,OAFW,WAEX,OAC0Be,GAD1B,OADS,YAEsC,CAClDX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKS,IAAlB,GAET,EAEYC,EAAqB,SAACH,GAGjC,OAAOZ,IAAAA,IAAA,UACGH,GADH,OAFW,WAEX,OAC0Be,GAD1B,OADS,YAEsC,CAClDX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GAET,C,mICdD,EA/Ce,WACb,OAA0BU,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAWZ,OACE,iCACE,iDACA,kBAAMI,SAZW,SAACC,GACpBA,EAAEC,kBACFnB,EAAAA,EAAAA,IAAeE,GAAON,KAAKgB,EAC5B,EASG,WACE,kBACEQ,SATM,SAACF,GACbR,EAASQ,EAAEG,OAAOC,MACnB,EAQOA,MAAOpB,EACPqB,KAAK,OACLC,aAAa,MACbC,YAAY,eAEd,mBAAQF,KAAK,SAAb,wBAGF,mBAEA,wBACGZ,GACCA,EAAOe,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMlB,GAAlC,SACGe,KAFID,EAMZ,QAIV,C","sources":["API/API.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"cae3be8cdf5c9c2351403518efd2a643\";\n\nexport const trendingMovieFetch = () => {\n  const trendingGet = \"/trending/movie/week\";\n  return axios\n    .get(`${BASE_URL}${trendingGet}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.results);\n  // .then(console.log);\n};\n\nexport const searchMovieApi = (searchQuery) => {\n  const searchUrl = \"/search/movie\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}`, {\n      params: {\n        api_key: KEY,\n        query: searchQuery,\n        page: 1,\n      },\n    })\n    .then((res) => res.data.results);\n};\n\nexport const searchMovieById = (movieId) => {\n  const searchUrl = \"/movie/\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const searchCreditsMovie = (movieId) => {\n  const searchUrl = \"/movie/\";\n  const lastUrl = \"/credits\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}${lastUrl}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.cast);\n  // .then(console.log)\n};\n\nexport const searchReviewsMovie = (movieId) => {\n  const searchUrl = \"/movie/\";\n  const lastUrl = \"/reviews\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}${lastUrl}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.results);\n  // .then(console.log)\n};\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { searchMovieApi } from \"../../API/API\";\n\nconst Movies = () => {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  console.log(location);\n\n  const searchMovies = (e) => {\n    e.preventDefault();\n    searchMovieApi(query).then(setMovies);\n  };\n\n  const input = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <h1>This is Movies Page</h1>\n      <form onSubmit={searchMovies}>\n        <input\n          onChange={input}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"search...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <br />\n\n      <ul>\n        {movies &&\n          movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","trendingMovieFetch","axios","params","api_key","then","res","data","results","searchMovieApi","searchQuery","query","page","searchMovieById","movieId","searchCreditsMovie","cast","searchReviewsMovie","useState","setQuery","movies","setMovies","location","useLocation","console","log","onSubmit","e","preventDefault","onChange","target","value","type","autoComplete","placeholder","map","id","title","to","state","from"],"sourceRoot":""}