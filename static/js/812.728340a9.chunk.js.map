{"version":3,"file":"static/js/812.728340a9.chunk.js","mappings":"+RAEMA,EAAW,+BACXC,EAAM,mCAECC,EAAqB,WAEhC,OAAOC,IAAAA,IAAA,UACGH,GADH,OADa,wBAEgB,CAChCI,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GAET,EAEYC,EAAiB,SAACC,GAE7B,OAAOR,IAAAA,IAAA,UACGH,GADH,OADW,iBAEgB,CAC9BI,OAAQ,CACNC,QAASJ,EACTW,MAAOD,EACPE,KAAM,KAGTP,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GACT,EAEYK,EAAkB,SAACC,GAE9B,OAAOZ,IAAAA,IAAA,UACGH,GADH,OADW,WACX,OAC0Be,GAAW,CACxCX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,IAAb,GACT,EAEYQ,EAAqB,SAACD,GAGjC,OAAOZ,IAAAA,IAAA,UACGH,GADH,OAFW,WAEX,OAC0Be,GAD1B,OADS,YAEsC,CAClDX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKS,IAAlB,GAET,EAEYC,EAAqB,SAACH,GAGjC,OAAOZ,IAAAA,IAAA,UACGH,GADH,OAFW,WAEX,OAC0Be,GAD1B,OADS,YAEsC,CAClDX,OAAQ,CACNC,QAASJ,KAGZK,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAlB,GAET,C,yHCjCD,EA5BgB,WACd,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAQR,OANAQ,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAmBH,GAAST,KAAKe,EAClC,GAAE,CAACN,IAEJS,QAAQC,IAAIV,IAGV,iCACE,6CACA,wBACGK,GACCA,EAAOM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC7B,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,QAIV,C","sources":["API/API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"cae3be8cdf5c9c2351403518efd2a643\";\n\nexport const trendingMovieFetch = () => {\n  const trendingGet = \"/trending/movie/week\";\n  return axios\n    .get(`${BASE_URL}${trendingGet}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.results);\n  // .then(console.log);\n};\n\nexport const searchMovieApi = (searchQuery) => {\n  const searchUrl = \"/search/movie\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}`, {\n      params: {\n        api_key: KEY,\n        query: searchQuery,\n        page: 1,\n      },\n    })\n    .then((res) => res.data.results);\n};\n\nexport const searchMovieById = (movieId) => {\n  const searchUrl = \"/movie/\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data);\n};\n\nexport const searchCreditsMovie = (movieId) => {\n  const searchUrl = \"/movie/\";\n  const lastUrl = \"/credits\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}${lastUrl}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.cast);\n  // .then(console.log)\n};\n\nexport const searchReviewsMovie = (movieId) => {\n  const searchUrl = \"/movie/\";\n  const lastUrl = \"/reviews\";\n  return axios\n    .get(`${BASE_URL}${searchUrl}${movieId}${lastUrl}`, {\n      params: {\n        api_key: KEY,\n      },\n    })\n    .then((res) => res.data.results);\n  // .then(console.log)\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { searchReviewsMovie } from \"../../API/API\";\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    searchReviewsMovie(movieId).then(setReview);\n  }, [movieId]);\n\n  console.log(movieId);\n\n  return (\n    <>\n      <h2>This is Reviews</h2>\n      <ul>\n        {review &&\n          review.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h2>{author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","KEY","trendingMovieFetch","axios","params","api_key","then","res","data","results","searchMovieApi","searchQuery","query","page","searchMovieById","movieId","searchCreditsMovie","cast","searchReviewsMovie","useState","review","setReview","useParams","useEffect","console","log","map","author","content","id"],"sourceRoot":""}